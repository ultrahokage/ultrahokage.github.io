!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},o.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";o.r(t);class n{constructor(e){this.element=e}on(e,t,o=this.element){o.addEventListener(e,e=>t(e.detail))}emit(e,t,o=this.element){const n=new CustomEvent(e,{detail:t});o.dispatchEvent(n)}static bindTo(e){let t=e;if("string"==typeof e&&(t=document.querySelector(e)),!(t instanceof HTMLElement||t instanceof HTMLDocument))throw new Error("cannot bound component");new this(t).init()}init(){throw new Error("Must be implemented!")}}var r=class extends n{init(){this.on("reRender",this.ReRender.bind(this)),this.on("DOMContentLoaded",this.loadStorage.bind(this)),this.on("socket",this.webSocket.bind(this))}loadStorage(){null!==localStorage.getItem("userHash")?(this.products=JSON.parse(localStorage.getItem("userHash")),this.groups=JSON.parse(localStorage.getItem("groupList")),this.contracors=JSON.parse(localStorage.getItem("contractorList")),this.entryDocuments=JSON.parse(localStorage.getItem("allDocuments")),this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),this.ClearSelectedMenu(),this.emit("renderUserList",this.products,document)):(this.ClearSelectedMenu(),this.products=[{product_name:"tov1",product_number:21,storage_id:2,storage_name:"sklad 2",product_id:334,vendor_code:"12"},{product_name:"tov2",product_number:22,storage_id:3,storage_name:"sklad 3",product_id:34,vendor_code:"432325"},{product_name:"tov3",product_number:23,storage_id:3,storage_name:"sklad 3",product_id:3324,vendor_code:"332124"},{product_name:"tov4",product_number:45,storage_id:3,storage_name:"sklad 3",product_id:33224,vendor_code:"14552"}],this.storage=[{id:1,name:"sklad 1",street:"xoxlova",description:"some description of your shop",phone:"+389292",schedule:"c пн-пт",storage_product_number:0},{id:2,name:"sklad 2",street:"xoxlova",description:"some description of your shop",phone:"+389292",schedule:"c пн-пт",storage_product_number:0},{id:3,name:"sklad 3",street:"xoxlova",description:"some description of your shop",phone:"+389292",schedule:"c пн-пт",storage_product_number:0},{id:4,name:"sklad 4",street:"xoxlova",description:"some description of your shop",phone:"+389292",schedule:"c пн-пт",storage_product_number:0}],this.contracors=[{contractor_id:1,contractor_name:"Best One",contractor_email:"contractor@gmail.com",contractor_phone:"+380932244130",contractor_inn:"123213",contractor_kpp:"123456789",contractor_address:"salyutna street"}],this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),localStorage.setItem("userHash",JSON.stringify(this.products)),this.storage.sort((e,t)=>e.id-t.id),localStorage.setItem("groupList",JSON.stringify(this.storage)),this.contracors.sort((e,t)=>e.product_id-t.product_id),localStorage.setItem("contractorList",JSON.stringify(this.contracors)),this.emit("renderUserList",this.products,document))}webSocket(){fetch("storage.txt").then(e=>e.text()).then(e=>{this.groups=JSON.parse(e),this.groups.sort((e,t)=>e.id-t.id),localStorage.setItem("groupList",JSON.stringify(this.groups))}),fetch("goods.txt").then(e=>e.text()).then(e=>{this.products=JSON.parse(e),this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),localStorage.setItem("userHash",JSON.stringify(this.products)),this.emit("renderUserList",this.products,document)}),fetch("contractors.txt").then(e=>e.text()).then(e=>{this.contracors=JSON.parse(e),this.contracors.sort((e,t)=>e.product_id-t.product_id),localStorage.setItem("contractorList",JSON.stringify(this.contracors))})}ReRender(e){this.products=e,this.emit("renderUserList",this.products,document)}ClearSelectedMenu(){const e=document.querySelector("#docList"),t=document.querySelector("#filters");for(let e=0;e<t.children.length;e+=1)t.children[e].style.backgroundColor="transparent",t.children[e].className="";for(let t=0;t<e.childElementCount;t+=1)e.children[t].style.backgroundColor="transparent",e.children[t].className=""}};const d=document.querySelector(".sidenav");M.Sidenav.init(d,{});var c=class extends n{init(){this.on("count",this.countProductsOnStorage.bind(this),document),this.on("renderGroups",this.render.bind(this),document)}render(e){const t=document.querySelector(".stripped"),o=document.createDocumentFragment(),n=document.querySelector("#tbodyStorage");n.innerHTML="",e.forEach(e=>{const t=document.createElement("tr"),o=document.createElement("td"),r=document.createElement("td"),d=document.createElement("td"),c=document.createElement("td"),s=document.createElement("td"),i=document.createElement("td"),a=document.createElement("a");t.id=e.id,o.innerText=e.name,r.innerText=e.street,d.innerHTML=e.description.replace(/(.{15})(.)/g,"$1-<br>$2"),c.innerText=e.phone,s.innerText=e.schedule,i.innerHTML=e.storage_product_number,i.style.paddingLeft="50px",a.className="destroy",a.addEventListener("click",this.deleteGoods.bind(this)),t.appendChild(o),t.appendChild(r),t.appendChild(d),t.appendChild(c),t.appendChild(s),t.appendChild(i),t.appendChild(a),n.appendChild(t)}),t.appendChild(o)}countProductsOnStorage(){const e=JSON.parse(localStorage.getItem("userHash")),t=JSON.parse(localStorage.getItem("groupList"));t.forEach(t=>{t.storage_product_number=e.reduce((e,o)=>o.storage_id===t.id?e+o.product_number:e,0)}),localStorage.setItem("groupList",JSON.stringify(t)),this.emit("renderGroups",t,document)}deleteGoods(e){const t=Number(e.currentTarget.parentElement.id),o=JSON.parse(localStorage.getItem("groupList")),n=o.indexOf(o.find(e=>e.id===t));o.splice(n,1),localStorage.setItem("groupList",JSON.stringify(o)),this.emit("renderGroups",o,document)}};var s=class extends n{init(){this.searchString="",this.on("renderUserList",this.render.bind(this),document),window.addEventListener("hashchange",this.location.bind(this)),this.documentsDiv=document.querySelector("#showList"),this.documentsDiv.style.display="none",document.querySelector("#additions").addEventListener("click",()=>{"none"===this.documentsDiv.style.display?this.documentsDiv.style.display="block":this.documentsDiv.style.display="none"}),this.vendorSort=document.querySelector("#vendor_sort"),this.nameSort=document.querySelector("#name_sort"),this.storageSort=document.querySelector("#storage_sort"),this.sortProducts=JSON.parse(localStorage.getItem("userHash")),this.vendorSort.addEventListener("click",()=>{this.sortProducts.sort((e,t)=>e.vendor_code-t.vendor_code),this.emit("renderUserList",this.sortProducts,document)}),this.nameSort.addEventListener("click",()=>{this.sortProducts.sort((e,t)=>e.product_name.localeCompare(t.product_name)),this.emit("renderUserList",this.sortProducts,document)}),this.storageSort.addEventListener("click",()=>{this.sortProducts.sort((e,t)=>e.storage_id-t.storage_id),this.emit("renderUserList",this.sortProducts,document)}),this.dropdownSort=document.querySelector("#dropdown-sort");const e=document.querySelector("html"),t=document.querySelector("#filters");for(let o=0;o<t.children.length;o+=1)o<t.children.length-1&&t.children[o+1].addEventListener("click",()=>{document.querySelector(".sidenav-trigger");const t=document.querySelector(".sidenav"),o=M.Sidenav.getInstance(t);console.log(t.style.transform),768===e.clientHeight&&1024===e.clientWidth?o.open():1024===e.clientHeight&&768===e.clientWidth?o.close():1024===e.clientHeight&&1366===e.clientWidth?o.open():1366===e.clientHeight&&1024===e.clientWidth?o.open():e.clientHeight<=824&&e.clientWidth<=414?o.close():e.clientWidth<=824?o.close():(t.style.transform,o.open())})}render(e){this.sortProducts=e;const t=JSON.parse(localStorage.getItem("groupList")),o=JSON.parse(localStorage.getItem("contractorList")),n=JSON.parse(localStorage.getItem("allDocuments")),r=document.querySelector(".stripped"),d=document.querySelector("#tbodyUser"),c=document.querySelector("#tbodyStorage"),s=document.querySelector("#tbodyContractor"),i=document.querySelector("#entryDocs"),a=document.querySelector("#outgoDocs"),l=document.querySelector("#moveDocs"),u=document.querySelector(".page-title"),m=document.createDocumentFragment(),h=document.location.hash,p=document.querySelector("#btn-add-group"),g=document.querySelector("#btn-add-user"),y=document.querySelector("#btn-add-contractor"),b=document.querySelector("#btn-add-entry-document"),v=document.querySelector("#btn-add-outgo-document"),_=document.querySelector("#btn-add-move-document"),S=document.querySelector("#info_search");this.dropdownSort.style.display="none",S.style.display="none",i.innerHTML="",i.hidden=!0,a.innerHTML="",a.hidden=!0,l.innerHTML="",l.hidden=!0,s.innerHTML="",c.innerHTML="",d.innerHTML="";const f=h.slice(2),E=document.querySelector("thead");if(b.style.display="none",v.style.display="none",_.style.display="none",g.style.display="none",y.style.display="none",p.style.display="none",this.documentsDiv.style.display="none",E.innerHTML="","documents"===f)u.innerText="Документы",this.documentsDiv.style.display="block",this.emit("renderEntryDocuments",n,document),this.emit("renderMoveDocuments",n,document),this.emit("renderOutDocuments",n,document),i.childNodes.length>=1&&(i.hidden=!1),a.childNodes.length>=1&&(a.hidden=!1),l.childNodes.length>=1&&(l.hidden=!1),i.classList.add("collapsible"),l.classList.add("collapsible");else if("entry_documents"===f)u.innerText="Приход",this.documentsDiv.style.display="block",b.style.display="block",this.emit("renderEntryDocuments",n,document),i.childNodes.length>=1&&(i.hidden=!1);else if("outcoming_documents"===f)u.innerText="Расход",v.style.display="block",this.documentsDiv.style.display="block",this.emit("renderOutDocuments",n,document),a.childNodes.length>=1&&(a.hidden=!1);else if("moves"===f)u.innerText="Движение по складам",_.style.display="block",this.documentsDiv.style.display="block",this.emit("renderMoveDocuments",n,document),l.childNodes.length>=1&&(l.hidden=!1);else{if("storage"===f)return u.innerText="Склады",p.style.display="block",s.innerHTML="",E.innerHTML="    <tr>\n      <th>Название</th>\n      <th>Улица</th>\n      <th>Описание</th>\n      <th>Телефон</th>\n      <th>График работы</th>\n      <th>Товаров на складе</th>\n    </tr>",this.emit("count",t,document);if("contractor"===f)return c.innerHTML="",u.innerText="Поставщики",y.style.display="block",E.innerHTML="    <tr>\n      <th>Наименование</th>\n      <th>E-mail</th>\n      <th>Телефон</th>\n      <th>ИНН</th>\n      <th>КПП</th>\n      <th>Адрес</th>\n    </tr>",this.emit("renderContractorList",o,document);if("goods"===f){if(this.dropdownSort.style.display="inline-block",S.style.display="block",g.style.display="block",u.innerText="Товары",E.innerHTML="    <tr>\n      <th>Артикул</th>\n      <th>Наименование товара</th>\n      <th>Склад</th>\n      <th>Общее количество</th>\n    </tr>",S.children.length<2){const e=document.createElement("li"),t=document.createElement("input");e.style.color="#000",e.style.width="20%",e.style.paddingLeft="5px",t.id="search",t.type="text",t.style.maxHeight="30px",t.style.border="1px solid #000",e.appendChild(t),S.appendChild(e);const o=document.querySelector("#search");o.addEventListener("keypress",this.searchProduct.bind(this)),o.addEventListener("keydown",this.deleteStringElem.bind(this)),o.addEventListener("keyup",this.updateInputValue.bind(this))}e.forEach(e=>{const t=document.createElement("tr"),o=document.createElement("td"),n=document.createElement("td"),r=document.createElement("td"),c=document.createElement("td"),s=document.createElement("a");e.product_number<0&&(c.style.backgroundColor="rgba(255, 15, 15, 0.15)"),t.id=e.product_id,o.innerText=e.vendor_code,n.innerText=e.product_name,r.innerText=e.storage_name,c.style.paddingLeft="50px",c.innerText=e.product_number,s.className="destroy",s.addEventListener("click",this.deleteGoods.bind(this)),t.appendChild(o),t.appendChild(n),t.appendChild(r),t.appendChild(c),t.appendChild(s),d.appendChild(t)}),r.appendChild(m)}else u.innerText="Select group, please!",E.innerHTML=null}}updateInputValue(e){const t=JSON.parse(localStorage.getItem("userHash")),o=e.keyCode;if(8===o||46===o||13===o){const e=document.querySelector("#search").value;this.searchString=e,console.log(this.searchString),this.sortedArray=t.filter(e=>e.product_name.toLowerCase().indexOf(this.searchString.toLowerCase())>-1||e.vendor_code.toString().indexOf(this.searchString)>-1),0===e.length&&(this.searchString="",this.sortedArray=t),this.emit("renderUserList",this.sortedArray,document)}}deleteStringElem(e){const t=JSON.parse(localStorage.getItem("userHash")),o=e.keyCode;8===o&&(this.searchString=this.searchString.slice(0,-1),this.sortedArray=t.filter(e=>e.product_name.toLowerCase().indexOf(this.searchString.toLowerCase())>-1||e.vendor_code.toString().indexOf(this.searchString)>-1)),13===o&&(this.searchString.trim(),this.sortedArray=t.filter(e=>e.product_name.indexOf(this.searchString)>-1||e.vendor_code.toString().indexOf(this.searchString)>-1))}searchProduct(e){const t=JSON.parse(localStorage.getItem("userHash"));null===this.searchString&&this.emit("renderUserList",t,document);const o=e.key;"Enter"!==o&&"Alt"!==o&&(console.log(o),this.searchString+=o,this.searchString=this.searchString.toLowerCase(),this.sortedArray=t.filter(e=>e.vendor_code.toString().indexOf(this.searchString)>-1||e.product_name.toLowerCase().indexOf(this.searchString)>-1),this.sortedArray.sort((e,t)=>e.vendor_code-t.vendor_code),this.emit("renderUserList",this.sortedArray,document))}location(e){const t=JSON.parse(localStorage.getItem("userHash")),o=document.querySelector("#docList"),n=document.querySelector("#filters");for(let e=0;e<n.children.length;e+=1)n.children[e].style.backgroundColor="transparent",n.children[e].className="";for(let e=0;e<o.childElementCount;e+=1)o.children[e].style.backgroundColor="transparent",o.children[e].className="";e.currentTarget.document.activeElement.parentElement.className="active",e.currentTarget.document.activeElement.parentElement.style.backgroundColor="#ee6e73",e.currentTarget.document.activeElement.parentElement.style.color="#fff";const r=document.querySelector("html");r.classList.remove("active"),r.style.backgroundColor="#fff",r.style.color="#000",t.sort((e,t)=>e.storage_id-t.storage_id),this.emit("renderUserList",t,document)}deleteGoods(e){const t=Number(e.currentTarget.parentElement.id),o=JSON.parse(localStorage.getItem("userHash")),n=o.indexOf(o.find(e=>e.product_id===t));o.splice(n,1),localStorage.setItem("userHash",JSON.stringify(o)),this.emit("reRender",o,document)}};var i=class extends n{init(){document.querySelector("#btn-add-user").addEventListener("click",this.openAddModal.bind(this))}trash(){for(let e=0;e<20;e+=1){const e=JSON.parse(localStorage.getItem("groupList")),t=Math.round(1e4*Math.random()),o=Math.round(10*Math.random()),n=Math.round(1e3*Math.random()),r=String("kavo")+String(Math.round(1e3*Math.random())),d=Math.round(100*Math.random());let c="";e.forEach(e=>{e.id===o&&(c=e.name)});const s={product_id:t,storage_id:o,vendor_code:n,product_name:r,product_number:d,storage_name:c};this.emit("addNewProduct",s,document)}}addNewProduct(){const e=Math.round(1e3*Math.random()),t=document.querySelector("#vendor_code").value,o=document.querySelector("#product_name").value;let n=document.querySelector("#product_number").value;n=Number(n);const r=document.querySelector("#modalAdd").querySelector(".storage").querySelector(".selected"),d=JSON.parse(localStorage.getItem("groupList")).find(e=>e.name===r.innerText),c={product_id:e,storage_id:d.id,vendor_code:t,product_name:o,product_number:n,storage_name:d.name};this.emit("addNewProduct",c,document)}openAddModal(){document.querySelector("#modalAdd").innerHTML+='  <div class="modal-content">\n    <h4>Добавить новый торар</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="vendor_code" type="text" class="validate">\n            <label for="Артикул" data-error="wrong" data-success="right">Артикул</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="product_name" type="text" class="validate">\n            <label for="Наименование товара" data-error="wrong" data-success="right">Наименование товара</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12 storage">\n            <select id="group_select">\n              <option value="" disabled selected>Выбирете склад</option>\n            </select>\n            <label>Склад</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="product_number" type="text" class="validate">\n            <label for="number" data-error="wrong" data-success="right">Количество товара</label>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="createUser" class="modal-action modal-close waves-effect waves-green btn-flat">Добавить</a>\n  </div>\n';const e=document.querySelector("#createUser"),t=document.querySelector("#modalAdd"),o=document.querySelector("#group_select");JSON.parse(localStorage.getItem("groupList")).forEach(e=>{o.innerHTML+=`<option value="${e.id}">${e.name}</option>`});const n=M.Modal.init(t,{});M.FormSelect.init(o,{}),n.open();const r=document.querySelector(".modal-content");"Выбирете склад"===document.querySelector(".selected").innerText&&e.setAttribute("disabled",""),t.style.maxHeight="90%",t.style.height="88%";const d=document.querySelector(".modal-overlay"),c=document.querySelector("#modalAdd").querySelector(".modal-close");r.addEventListener("click",this.checkValid.bind(this)),d.addEventListener("click",this.clearModal.bind(this)),c.addEventListener("click",this.clearModal.bind(this)),e.addEventListener("click",this.addNewProduct.bind(this))}checkValid(){const e=document.querySelector("#createUser");"Выбирете склад"===document.querySelector(".selected").innerText?e.setAttribute("disabled",""):e.removeAttribute("disabled")}clearModal(){document.querySelector("#modalAdd").innerHTML=null}};var a=class extends n{init(){this.editButton=document.querySelector("#tbodyUser"),this.editButton.addEventListener("dblclick",this.openEditModal.bind(this))}editProduct(){let e=Number(document.querySelector("#user_edit_id").innerText);const t=document.querySelector("#vendor_code").value,o=document.querySelector("#product_name").value;let n=document.querySelector("#product_number").value;const r=document.querySelector("#product_number").value;n=Number(this.check-n);let d=JSON.parse(localStorage.getItem("userHash"));const c=document.querySelector("#modalEdit").querySelector(".storage").querySelector(".selected"),s=JSON.parse(localStorage.getItem("groupList")),i=d.find(t=>t.product_id===e),a=s.find(e=>e.name===c.innerText),l=a.id;let u=i.storage_id,m=i.storage_name;const h=JSON.parse(localStorage.getItem("allDocuments"));h.forEach(e=>{e.product_name===this.oldProdName&&(e.product_name=o)}),localStorage.setItem("allDocuments",JSON.stringify(h)),d.forEach(e=>{e.product_name===this.oldProdName&&(e.product_name=o)}),localStorage.setItem("userHash",JSON.stringify(d)),d=JSON.parse(localStorage.getItem("userHash")),i.storage_id===l&&(n=Number(r));const p={product_id:e,storage_id:u,vendor_code:t,product_name:o,product_number:n,storage_name:m},g=d.find(e=>e.storage_name===a.name&&e.product_name===o);g?(n=Number(r)+g.product_number,this.dataMoveProduct={product_id:g.product_id,storage_id:g.storage_id,vendor_code:g.vendor_code,product_name:o,product_number:n,storage_name:g.storage_name},this.emit("editProduct",this.dataMoveProduct,document)):i.storage_id!==l&&(e=Math.max(...d.map(e=>e.product_id))+1,u=l,m=a.name,n=Number(r),this.dataMoveProduct={product_id:e,storage_id:u,vendor_code:t,product_name:o,product_number:n,storage_name:m},this.emit("editProduct",this.dataMoveProduct,document)),this.emit("editProduct",p,document)}openEditModal(e){document.querySelector("#modalEdit").innerHTML+='<div class="modal-content">\n    <div id="user_edit_id" hidden></div>\n    <h4>Редактировать товар</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="vendor_code" type="text" class="validate">\n            <label for="Артикул" data-error="wrong" data-success="right">Артикул</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="product_name" type="text" class="validate">\n            <label for="Наименование товара" data-error="wrong" data-success="right">Наименование товара</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12 storage">\n            <select id="group_select_edit">\n              <option value="" disabled selected>Выбирете склад</option>\n            </select>\n            <label>Склад</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="product_number" type="text" class="validate">\n            <label for="number" data-error="wrong" data-success="right">Количество товара</label>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="EditUser" class="modal-action modal-close waves-effect waves-green btn-flat">Обновить</a>\n  </div>';const t=document.querySelector("#EditUser"),o=document.querySelector("#user_edit_id"),n=document.querySelector("#vendor_code"),r=document.querySelector("#product_name"),d=document.querySelector("#product_number"),c=JSON.parse(localStorage.getItem("userHash")),s=JSON.parse(localStorage.getItem("groupList")),i=document.querySelector("#modalEdit"),a=document.querySelector("#group_select_edit");s.forEach(e=>{a.innerHTML+=`<option value="${e.id}">${e.name}</option>`});const l=M.Modal.init(i,{});M.FormSelect.init(a,{}),l.open(),document.querySelector(".modal-content").addEventListener("click",this.checkUpdateBtn.bind(this)),"Выбирете склад"===document.querySelector(".selected").innerText&&t.setAttribute("disabled","");const u=c.find(t=>t.product_id===Number(e.target.parentElement.id));this.oldProdName=u.product_name,console.log(this.oldProdName),n.classList.add("valid"),n.nextElementSibling.className="active",r.classList.add("valid"),r.nextElementSibling.className="active",d.classList.add("valid"),d.nextElementSibling.className="active",o.innerText=u.product_id,n.value=u.vendor_code,r.value=u.product_name,d.value=u.product_number,this.check=Number(d.value);const m=document.querySelector(".modal-overlay"),h=document.querySelector("#modalEdit").querySelector(".modal-close");m.addEventListener("click",this.clearModal.bind(this)),h.addEventListener("click",this.clearModal.bind(this)),t.addEventListener("click",this.editProduct.bind(this))}clearModal(){document.querySelector("#modalEdit").innerHTML=null}checkUpdateBtn(){const e=document.querySelector(".selected"),t=document.querySelector("#EditUser");"Выбирете склад"===e.innerText?t.setAttribute("disabled",""):t.removeAttribute("disabled")}};var l=class extends n{init(){this.on("addNewProduct",this.addNewProduct.bind(this),document),this.on("editProduct",this.editProduct.bind(this),document),this.on("groupAdd",this.groupAdd.bind(this),document),this.on("storageEdit",this.groupEdit.bind(this),document),this.on("contractorAdd",this.contractorAdd.bind(this),document),this.on("contractorEdit",this.contractorEdit.bind(this),document)}addNewProduct(e){const t=JSON.parse(localStorage.getItem("userHash"));t.push(e),localStorage.setItem("userHash",JSON.stringify(t)),document.querySelector("#modalAdd").innerHTML=null,this.emit("reRender",t,document)}editProduct(e){const t=JSON.parse(localStorage.getItem("userHash"));if(t.find(t=>t.product_id===Number(e.product_id))){const o=t.indexOf(t.find(t=>t.product_id===Number(e.product_id)));t.splice(o,1)}t.push(e),t.sort((e,t)=>e.storage_id-t.storage_id),localStorage.setItem("userHash",JSON.stringify(t)),document.querySelector("#modalEdit").innerHTML="",this.emit("renderUserList",t,document)}groupAdd(e){const t=JSON.parse(localStorage.getItem("groupList"));t.push(e),t.sort((e,t)=>e.id-t.id),localStorage.setItem("groupList",JSON.stringify(t)),document.querySelector("#modalGroupAdd").innerHTML="",this.emit("renderGroups",t,document)}groupEdit(e){const t=JSON.parse(localStorage.getItem("groupList")),o=JSON.parse(localStorage.getItem("userHash")),n=t.find(t=>t.id===Number(e.id));if(n){const o=t.indexOf(t.find(t=>t.id===Number(e.id)));t.splice(o,1)}t.push(e),t.sort((e,t)=>e.id-t.id),localStorage.setItem("groupList",JSON.stringify(t)),document.querySelector("#modalStorageEdit").innerHTML="",o.forEach(t=>{t.storage_id===n.id&&(t.storage_name=e.name)}),localStorage.setItem("userHash",JSON.stringify(o)),this.emit("renderGroups",t,document)}contractorAdd(e){const t=JSON.parse(localStorage.getItem("contractorList"));t.push(e),t.sort((e,t)=>e.contractor_id-t.contractor_id),localStorage.setItem("contractorList",JSON.stringify(t)),document.querySelector("#modalContractorAdd").innerHTML="",this.emit("renderContractorList",t,document)}contractorEdit(e){const t=JSON.parse(localStorage.getItem("contractorList"));if(t.find(t=>t.contractor_id===e.contractor_id)){const o=t.indexOf(t.find(t=>t.contractor_id===e.contractor_id));t.splice(o,1)}t.push(e),t.sort((e,t)=>e.contractor_id-t.contractor_id),localStorage.setItem("contractorList",JSON.stringify(t)),document.querySelector("#modalContractorEdit").innerHTML="",this.emit("renderContractorList",t,document)}};const u=document.querySelector("#btn-add-group");var m=class extends n{init(){u.addEventListener("click",this.openAddModal.bind(this))}groupAdd(){const e=document.querySelector("#storage_name").value,t=document.querySelector("#storage_street").value,o=document.querySelector("#storage_description").value,n=document.querySelector("#storage_phone").value,r=document.querySelector("#storage_schedule").value,d=JSON.parse(localStorage.getItem("groupList"));let c=Math.max(...d.map(e=>e.id));const s={id:c+=1,name:e,street:t,description:o,phone:n,schedule:r,storage_product_number:0};this.emit("groupAdd",s,document)}openAddModal(){const e=document.querySelector("#modalGroupAdd");e.innerHTML+='  <div class="modal-content">\n    <h4>Добавить новый склад</h4>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="storage_name" type="text" class="validate">\n            <label for="storage name" data-error="wrong" data-success="right">Название склада</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="storage_street" type="text" class="validate">\n            <label for="Адрес" data-error="wrong" data-success="right">Адрес</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="storage_description" type="text" class="validate">\n            <label for="storage name" data-error="wrong" data-success="right">Описание</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="storage_phone" type="text" class="validate">\n            <label for="Телефон" data-error="wrong" data-success="right">Телефон</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="storage_schedule" type="text" class="validate">\n            <label for="График" data-error="wrong" data-success="right">График работы</label>\n          </div>\n        </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="createGroup" class="modal-action modal-close waves-effect waves-green btn-flat">Создать</a>\n  </div>\n';const t=document.querySelector("#createGroup");M.Modal.init(e,{}).open();const o=document.querySelector(".modal-overlay"),n=document.querySelector("#modalGroupAdd").querySelector(".modal-close");o.addEventListener("click",this.clearModal.bind(this)),n.addEventListener("click",this.clearModal.bind(this)),t.addEventListener("click",this.groupAdd.bind(this))}clearModal(){document.querySelector("#modalGroupAdd").innerHTML=null}};var h=class extends n{init(){this.editButton=document.querySelector("#tbodyStorage"),this.editButton.addEventListener("dblclick",this.openEditModal.bind(this))}storageEdit(){let e=document.querySelector("#storage_edit_id").innerHTML;e=Number(e);const t=document.querySelector("#storage_name").value,o=document.querySelector("#storage_street").value,n=document.querySelector("#storage_description").value,r=document.querySelector("#storage_phone").value,d=document.querySelector("#storage_schedule").value,c=JSON.parse(localStorage.getItem("groupList")).find(t=>t.id===e).storage_product_number,s={id:e,name:t,street:o,description:n,phone:r,schedule:d,storage_product_number:c};this.emit("storageEdit",s,document)}openEditModal(e){const t=document.querySelector("#modalStorageEdit");t.innerHTML+='  <div class="modal-content">\n    <h4>Редактировать склад</h4>\n<div id="storage_edit_id" hidden></div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="storage_name" type="text" class="validate">\n            <label for="storage name" data-error="wrong" data-success="right">Название склада</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="storage_street" type="text" class="validate">\n            <label for="Адрес" data-error="wrong" data-success="right">Адрес</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="storage_description" type="text" class="validate">\n            <label for="storage name" data-error="wrong" data-success="right">Описание</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="storage_phone" type="text" class="validate">\n            <label for="Телефон" data-error="wrong" data-success="right">Телефон</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="storage_schedule" type="text" class="validate">\n            <label for="График" data-error="wrong" data-success="right">График работы</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="all_products" type="text" class="validate" disabled>\n            <label for="number" style="color: #4CAF50">Всего товаров</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12 showProductsStorage">\n          </div>\n        </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="storageUpdate" class="modal-action modal-close waves-effect waves-green btn-flat">Обновить</a>\n  </div>\n';const o=document.querySelector("#storageUpdate"),n=document.querySelector("#storage_edit_id"),r=document.querySelector("#storage_name"),d=document.querySelector("#storage_street"),c=document.querySelector("#storage_description"),s=document.querySelector("#storage_phone"),i=document.querySelector("#storage_schedule"),a=document.querySelector("#all_products"),l=JSON.parse(localStorage.getItem("groupList")),u=JSON.parse(localStorage.getItem("userHash")),m=document.querySelector(".showProductsStorage");M.Modal.init(t,{}).open(),t.style.maxHeight="90%",t.style.height="88%";const h=l.find(t=>t.id===Number(e.target.parentElement.id));r.classList.add("valid"),r.nextElementSibling.className="active",d.classList.add("valid"),d.nextElementSibling.className="active",c.classList.add("valid"),c.nextElementSibling.className="active",s.classList.add("valid"),s.nextElementSibling.className="active",i.classList.add("valid"),i.nextElementSibling.className="active",a.classList.add("valid"),a.nextElementSibling.className="active",n.innerText=h.id,r.value=h.name,d.value=h.street,c.value=h.description,s.value=h.phone,i.value=h.schedule,a.value=`Всего на складе : ${h.storage_product_number}`,m.innerHTML+='<table class="">\n    <thead id="showProducts">    <tr>\n      <th>Артикул</th>\n      <th>Наименование товара</th>\n      <th>Склад</th>\n      <th>Общее количество</th>\n    </tr> </thead>';const p=document.querySelector("#showProducts");u.forEach(e=>{h.id===e.storage_id&&(p.innerHTML+=`<tr><td>${e.vendor_code}</td>\n               <td>${e.product_name}</td>\n               <td>${e.storage_name}</td>\n               <td style="padding-left: 50px">${e.product_number}</td>\n          </tr>`)}),1===p.children.length&&p.setAttribute("hidden","");const g=document.querySelector(".modal-overlay"),y=document.querySelector("#modalStorageEdit").querySelector(".modal-close");o.addEventListener("click",this.storageEdit.bind(this)),g.addEventListener("click",this.clearModal.bind(this)),y.addEventListener("click",this.clearModal.bind(this))}clearModal(){document.querySelector("#modalStorageEdit").innerHTML=null}};var p=class extends n{init(){this.on("renderContractorList",this.render.bind(this),document)}render(e){const t=document.querySelector(".stripped");t.style.marginTop="20px";const o=document.createDocumentFragment(),n=document.querySelector("#tbodyContractor");n.innerHTML="",e.forEach(e=>{const t=document.createElement("tr"),o=document.createElement("td"),r=document.createElement("td"),d=document.createElement("td"),c=document.createElement("td"),s=document.createElement("td"),i=document.createElement("td"),a=document.createElement("a");t.id=e.contractor_id,o.innerHTML=e.contractor_name,r.innerHTML=e.contractor_email,d.innerHTML=e.contractor_phone,c.innerHTML=e.contractor_inn,s.innerHTML=e.contractor_kpp,i.innerHTML=e.contractor_address,a.style.marginLeft="-40px",a.className="destroy",a.addEventListener("click",this.deleteGoods.bind(this)),t.appendChild(o),t.appendChild(r),t.appendChild(d),t.appendChild(c),t.appendChild(s),t.appendChild(i),t.appendChild(a),n.appendChild(t)}),t.appendChild(o)}deleteGoods(e){const t=Number(e.currentTarget.parentElement.id),o=JSON.parse(localStorage.getItem("contractorList")),n=o.indexOf(o.find(e=>e.contractor_id===t));o.splice(n,1),localStorage.setItem("contractorList",JSON.stringify(o)),this.emit("renderContractorList",o,document)}};var g=class extends n{init(){document.querySelector("#btn-add-contractor").addEventListener("click",this.openAddModal.bind(this))}contractorAdd(){const e=JSON.parse(localStorage.getItem("contractorList"));let t=Math.max(...e.map(e=>e.contractor_id));const o={contractor_id:t+=1,contractor_name:document.querySelector("#contractor_name").value,contractor_email:document.querySelector("#contractor_email").value,contractor_phone:document.querySelector("#contractor_phone").value,contractor_inn:document.querySelector("#contractor_inn").value,contractor_kpp:document.querySelector("#contractor_kpp").value,contractor_address:document.querySelector("#contractor_address").value};this.emit("contractorAdd",o,document)}openAddModal(){const e=document.querySelector("#modalContractorAdd");e.innerHTML+='  <div class="modal-content">\n    <h4>Добавить поставщика</h4>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="contractor_name" type="text" class="validate">\n            <label for="contractor name" data-error="wrong" data-success="right">Наименование</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="contractor_email" type="text" class="validate">\n            <label for="E-mail" data-error="wrong" data-success="right">E-mail</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="contractor_phone" type="text" class="validate">\n            <label for="phone" data-error="wrong" data-success="right">Телефон</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="contractor_inn" type="text" class="validate">\n            <label for="contractor inn" data-error="wrong" data-success="right">ИНН</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="contractor_kpp" type="text" class="validate">\n            <label for="kpp" data-error="wrong" data-success="right">КПП</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s12">\n            <input id="contractor_address" type="text" class="validate">\n            <label for="Адрес" data-error="wrong" data-success="right">Адрес</label>\n          </div>\n        </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="createContractor" class="modal-action modal-close waves-effect waves-green btn-flat">Создать</a>\n  </div>\n';const t=document.querySelector("#createContractor");M.Modal.init(e,{}).open();const o=document.querySelector(".modal-overlay"),n=document.querySelector("#modalContractorAdd").querySelector(".modal-close");o.addEventListener("click",this.clearModal.bind(this)),n.addEventListener("click",this.clearModal.bind(this)),t.addEventListener("click",this.contractorAdd.bind(this))}clearModal(){document.querySelector("#modalContractorAdd").innerHTML=null}};var y=class extends n{init(){this.editBtn=document.querySelector("#tbodyContractor"),this.editBtn.addEventListener("dblclick",this.openModalEdit.bind(this))}editContractor(){const e={contractor_id:Number(this.contractorId.innerHTML),contractor_name:this.contractorName.value,contractor_email:this.contractorEmail.value,contractor_phone:this.contractorPhone.value,contractor_inn:this.contractorInn.value,contractor_kpp:this.contractorKpp.value,contractor_address:this.contractorAddress.value};this.emit("contractorEdit",e,document)}openModalEdit(e){const t=document.querySelector("#modalContractorEdit");t.innerHTML='<div class="modal-content"> \n          <div id="contractor_edit_id" hidden></div>\n          <h4>Редактировать поставщика</h4> \n              <div class="row"> \n                <div class="input-field col s6"> \n                  <input id="contractor_name" type="text" class="validate"> \n                  <label for="contractor name" data-error="wrong" data-success="right">Наименование</label> \n                </div> \n                <div class="input-field col s6"> \n                  <input id="contractor_email" type="text" class="validate"> \n                  <label for="E-mail" data-error="wrong" data-success="right">E-mail</label> \n                </div> \n              </div> \n              <div class="row"> \n                <div class="input-field col s12"> \n                  <input id="contractor_phone" type="text" class="validate"> \n                  <label for="phone" data-error="wrong" data-success="right">Телефон</label> \n                </div> \n              </div> \n              <div class="row"> \n                <div class="input-field col s6"> \n                  <input id="contractor_inn" type="text" class="validate"> \n                  <label for="contractor inn" data-error="wrong" data-success="right">ИНН</label> \n                </div> \n                <div class="input-field col s6"> \n                  <input id="contractor_kpp" type="text" class="validate"> \n                  <label for="kpp" data-error="wrong" data-success="right">КПП</label> \n                </div> \n              </div> \n              <div class="row"> \n                <div class="input-field col s12"> \n                  <input id="contractor_address" type="text" class="validate"> \n                  <label for="Адрес" data-error="wrong" data-success="right">Адрес</label> \n                </div> \n              </div> \n        <div class="modal-footer" style="width: 90%;position: fixed"> \n          <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a> \n          <a id="editContractor" class="modal-action modal-close waves-effect waves-green btn-flat">Обновить</a> \n        </div>',this.updateBtn=document.querySelector("#editContractor"),this.contractorId=document.querySelector("#contractor_edit_id"),this.contractorName=document.querySelector("#contractor_name"),this.contractorEmail=document.querySelector("#contractor_email"),this.contractorPhone=document.querySelector("#contractor_phone"),this.contractorInn=document.querySelector("#contractor_inn"),this.contractorKpp=document.querySelector("#contractor_kpp"),this.contractorAddress=document.querySelector("#contractor_address");const o=JSON.parse(localStorage.getItem("contractorList"));M.Modal.init(t,{}).open();const n=document.querySelector(".modal-content"),r=n.querySelectorAll("input"),d=n.querySelectorAll("label"),c=o.find(t=>t.contractor_id===Number(e.target.parentElement.id));this.contractorId.innerText=c.contractor_id.toString(),this.contractorName.value=c.contractor_name,this.contractorEmail.value=c.contractor_email,this.contractorPhone.value=c.contractor_phone,this.contractorInn.value=c.contractor_inn,this.contractorKpp.value=c.contractor_kpp,this.contractorAddress.value=c.contractor_address,r.forEach(e=>e.classList.add("valid")),d.forEach(e=>e.classList.add("active")),this.updateBtn.addEventListener("click",this.editContractor.bind(this))}};var b=class extends n{init(){this.documentNumber=0,this.editNewProducts=[],this.newList=[],this.allAddedProducts=[],this.count=0,this.addCount=0,document.querySelector("#btn-add-entry-document").addEventListener("click",this.openEntryModal.bind(this))}addNewDocument(){null!==localStorage.getItem("allDocuments")?(this.documents=JSON.parse(localStorage.getItem("allDocuments")),this.documentNumber=Math.max(...this.documents.map(e=>e.document_number))+1):(this.documents=[],this.documentNumber=0),this.documents=[],this.editNewProducts=[],this.editNewProducts=this.allAddedProducts;try{if(0===this.editNewProducts.length)throw new Error("Пустой список товаров");const e=JSON.parse(localStorage.getItem("groupList")),t=JSON.parse(localStorage.getItem("allDocuments")),o=document.querySelector(".contractor").querySelector(".selected").innerText;let n=document.querySelector("#entry_document_number").value;n=Number(n);const r=document.querySelector("#customer").value,d=document.querySelector("#entry_data").value,c=document.querySelector(".storage").querySelector(".selected").innerText,s=e.find(e=>e.name===c),i=s.id,a=s.name;this.editNewProducts.forEach(e=>{e.document_number=this.documentNumber,e.document=1,e.entry_number=n,e.contractor=o,e.customer=r,e.date=`${d}`,e.storage_id=i,e.storage_name=a}),this.documents=this.documents.concat(this.editNewProducts),null!==t&&(this.documents=this.documents.concat(t)),localStorage.setItem("allDocuments",JSON.stringify(this.documents)),this.emit("renderEntryDocuments",this.documents,document),this.changeProducts.forEach(e=>{const t=JSON.parse(localStorage.getItem("userHash")),o=t.find(t=>t.product_name===e.product_name&&t.storage_name===e.storage_name);o?(e.product_id=o.product_id,e.product_number+=o.product_number,this.emit("editProduct",e,document)):(e.product_id=Math.max(...t.map(e=>e.product_id))+1,this.emit("editProduct",e,document))}),this.documentNumber+=1,this.allAddedProducts=[],document.querySelector("#modalEntryDocumentAdd").innerHTML=null}catch(e){alert("Что-то введено не верно, попробуйте снова"),setTimeout(()=>{document.querySelector("#modalEntryDocumentAdd").innerHTML="",this.openEntryModal()},250)}}openEntryModal(){const e=document.querySelector("#modalEntryDocumentAdd");function t(){document.querySelector("#modalEntryDocumentAdd").innerHTML=""}e.innerHTML+='<div class="modal-content">\n    <div id="user_edit_id" hidden></div>\n    <h4>Приходная накладная</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s6 contractor">\n            <select id="contractor_group_select">\n              <option value="" disabled selected>Выбирете поставщика</option>\n            </select>\n            <label>Поставщик</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="entry_document_number" type="number">\n            <label for="document">Номер накладной</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="customer" type="text">\n            <label for="customer">Покупатель</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="entry_data" type="text" class="datepicker">\n            <label for="Date">Дата получения</label>\n          </div>\n</div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6 storage">\n            <select id="choose_entry_storage">\n              <option value="" disabled selected>Выбирете склад</option>\n            </select>\n            <label>Склад</label>\n          </div>\n        </div>\n        <div class="row">\n    <a id="choose_product" class="waves-effect waves-green btn-flat" style="background-color: rgba(0, 0, 0, 0.1);">Выбрать товар</a>\n    <a id="add_new_prod" class="waves-effect waves-green btn-flat" style="background-color: rgba(0, 0, 0, 0.1);">Добавить новый товар</a>\n          <div class="col s12 addedProducts">\n          </div>\n        </div>\n      </form>\n    </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="createEntryDocument" class="modal-action modal-close waves-effect waves-green btn-flat">Сохранить</a>\n  </div>';const o=document.querySelector(".datepicker");this.products=JSON.parse(localStorage.getItem("userHash"));const n=JSON.parse(localStorage.getItem("contractorList")),r=JSON.parse(localStorage.getItem("groupList")),d=document.querySelector("#contractor_group_select"),c=document.querySelector("#choose_entry_storage");n.forEach(e=>{d.innerHTML+=`<option value="${e.contractor_id}">${e.contractor_name}</option>`}),r.forEach(e=>{c.innerHTML+=`<option value="${e.id}">${e.name}</option>`});const s=M.Modal.init(e,{});M.FormSelect.init(d,{}),M.FormSelect.init(c,{}),M.Datepicker.init(o,{selectMonths:!0,selectYears:15,today:"Today",clear:"Clear",close:"Ok",closeOnSelect:!1}),this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),this.products.reduce((e,t)=>{const o=this.products.indexOf(this.products.find(t=>t.product_name===e.product_name));return e.product_name===t.product_name&&this.products.forEach((t,n)=>(t.product_name===e.product_name&&(this.products.splice(o,1),n=o),n)),t}),s.open(),this.allAddedProducts=[],this.changeProducts=[],document.querySelector(".datepicker-modal").style.position="fixed";const i=document.querySelector(".open");i.style.maxHeight="80%",i.style.height="80%",this.closeEntryBtn=document.querySelector("#modalEntryDocumentAdd").querySelector(".modal-close"),this.closeEntryOverlay=document.querySelector("#modalEntryDocumentAdd").nextElementSibling,this.closeEntryBtn.addEventListener("click",t),this.closeEntryOverlay.addEventListener("click",t);const a=document.querySelector("#add_new_prod"),l=document.querySelector(".addedProducts");document.querySelector("#choose_product").addEventListener("click",()=>{const e=document.querySelector("#modalChooseProduct");function t(){document.querySelector("#modalChooseProduct").innerHTML=""}e.innerHTML+='<div class="modal-content">\n    <h4>Выбор товара</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s12 showProductsChoose">\n          </div>\n        </div>\n      </form>\n    </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="addChosenProds" class="modal-action modal-close waves-effect waves-green btn-flat">Добавить</a>\n  </div>',M.Modal.init(e,{}).open(),this.addChosenBtn=document.querySelector("#addChosenProds"),this.addChosenBtn.addEventListener("click",this.addChosen.bind(this)),document.querySelector(".showProductsChoose").innerHTML+='<table class="">\n    <thead>    <tr>\n      <th>Наименование товара</th>\n      <th>Отметить</th>\n    </tr> </thead>\n<tbody id="showProductsChoose"></tbody>';const o=document.querySelector("#showProductsChoose");this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),this.products.reduce((e,t)=>{const o=this.products.indexOf(this.products.find(t=>t.product_name===e.product_name));return e.product_name===t.product_name&&this.products.forEach((t,n)=>(t.product_name===e.product_name&&(this.products.splice(o,1),n=o),n)),t}),this.products.forEach(e=>{e.completed=!1,o.innerHTML+=`<tr id="${e.product_id}">\n           <td>${e.product_name}</td>\n           <td><input type="checkbox" class="filled-in" /></td>\n          </tr>`}),this.changeCheckbox=document.querySelector("#showProductsChoose"),this.changeCheckbox.addEventListener("click",this.completeProduct.bind(this)),this.closeBtn=document.querySelector("#modalChooseProduct").querySelector(".modal-close"),this.closeOverlay=document.querySelector("#modalChooseProduct").nextElementSibling,this.closeBtn.addEventListener("click",t),this.closeOverlay.addEventListener("click",t)}),l.innerHTML+='<table class="">\n    <thead id="showAddedProducts">    <tr>\n      <th>№</th>\n      <th>Наименование товара</th>\n      <th>Количество</th>\n      <th>Цена без ПДВ</th>\n      <th>Сумма без ПДВ</th>\n</tr></thead>',a.addEventListener("click",()=>{const e=document.querySelector("#showAddedProducts");1===e.children.length?this.addCount=0:this.addCount=this.count;const t=Math.round(1e3*Math.random());e.innerHTML+=`<tr id="${t}">\n              <td>${this.addCount+=1}</td>\n              <td id="prod_name" style="white-space: nowrap">впишите имя</td>\n              <td  id="quantity_${this.addCount}" >0</td>\n              <td  id="price_${this.addCount}">0</td>\n              <td id="sum_${this.addCount}"></td>\n          </tr>`;const o={product_id:t,vendor_code:"0",product_name:document.querySelector("#prod_name").innerText,storage_name:"some",storage_id:1,product_number:0};this.allAddedProducts.push(o),this.changeProducts.push(o),this.count=this.addCount});const u=document.querySelector("#showAddedProducts");u.addEventListener("click",e=>{this.td=e.target,this.prodId=Number(e.target.parentElement.id);const t=this.allAddedProducts.find(e=>this.prodId===e.product_id),o=this.allAddedProducts.indexOf(t);this.td.setAttribute("contenteditable","true"),u.setAttribute("contenteditable","false"),this.td.addEventListener("keypress",e=>{13===e.keyCode&&(t.product_name=u.children[o+1].children[1].innerHTML,t.product_number=Number(u.children[o+1].children[2].innerHTML),t.product_price=Number(u.children[o+1].children[3].innerHTML),t.product_sum=Number(u.children[o+1].children[4].innerHTML),this.td.removeAttribute("contenteditable"),this.priceCount())}),this.td.addEventListener("blur",()=>{t.product_name=u.children[o+1].children[1].innerHTML,t.product_number=Number(u.children[o+1].children[2].innerHTML),t.product_price=Number(u.children[o+1].children[3].innerHTML),t.product_sum=Number(u.children[o+1].children[4].innerHTML),this.td.removeAttribute("contenteditable"),this.priceCount()})}),document.querySelector("#createEntryDocument").addEventListener("click",this.addNewDocument.bind(this))}completeProduct(e){const t=Number(e.target.parentElement.parentElement.id),o=e.target,n=this.products.find(e=>e.product_id===t),r=this.products.indexOf(this.products.find(e=>e.product_id===t));try{o.checked?o.checked&&(n.completed=!0,this.products.splice(r,1),this.products.push(n),o.setAttribute("checked","")):(n.completed=!1,this.products.splice(r,1),this.products.push(n),o.removeAttribute("checked"))}catch(e){console.log("missed")}this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),this.newList=this.products}addChosen(){const e=document.querySelector("#showAddedProducts");1===e.children.length?this.count=0:this.count=this.addCount,this.newList.forEach(t=>{t.completed&&(e.innerHTML+=`<tr id="${t.product_id}">\n              <td>${this.count+=1}</td>\n              <td>${t.product_name}</td>\n              <td id="quantity_${this.count}">0</td>\n              <td id="price_${this.count}">0</td>\n              <td id="sum_${this.count}"></td>\n          </tr>`,this.allAddedProducts.push(t),this.changeProducts.push(t)),this.addCount=this.count});for(let t=1;t<e.children.length;t+=1){const e=document.getElementById("quantity_"+t),o=document.getElementById("price_"+t);document.getElementById("sum_"+t).innerHTML=`${Number(e.innerText)*Number(o.innerText)}`}document.querySelector("#modalChooseProduct").innerHTML=null}priceCount(){const e=document.querySelector("#showAddedProducts");for(let t=1;t<e.children.length;t+=1){const e=document.getElementById("quantity_"+t),o=document.getElementById("price_"+t);document.getElementById("sum_"+t).innerHTML=`${Number(e.innerText)*Number(o.innerText)}`}}};var v=class extends n{init(){this.counter=0,this.on("renderEntryDocuments",this.renderDocs.bind(this),document)}renderDocs(e){if(null!==e){if(1===(e=e.filter(e=>1===e.document)).length)e.forEach(e=>e.document_number=0);else{e.sort((e,t)=>e.document_number-t.document_number),this.uniqueLength=[],e.forEach(e=>{this.uniqueLength.includes(e.document_number)||this.uniqueLength.push(e.document_number)});for(let t=0;t<this.uniqueLength.length;t+=1)e.forEach(e=>{e.document_number===this.uniqueLength[t]&&(e.document_number=t)})}this.counter=0,this.fullSum=0;const t=Math.max(...e.map(e=>e.document_number)),o=document.querySelector("#entryDocs"),n=document.querySelector("#outgoDocs"),r=document.querySelector("#moveDocs");n.classList.remove("collapsible"),r.classList.remove("collapsible"),o.classList.add("collapsible");const d=document.querySelector(".collapsible");M.Collapsible.init(d,{}),o.innerHTML="";const c="Приходная накладная";for(let n=0;n<=t;n+=1){const t=document.createDocumentFragment(),n=document.createElement("li"),r=document.createElement("div"),d=document.createElement("span"),s=document.createElement("div"),i=document.createElement("table"),a=document.createElement("tbody");i.id=`docTable_${this.counter}`;const l=document.createElement("thead"),u=document.createElement("tr"),m=document.createElement("a");m.id="exportToExcel",m.className="waves-effect waves-green btn-flat",m.style.backgroundColor="rgba(0, 0, 0, 0.1)",m.innerText="Экспортировать в Excel";const h=document.createElement("tbody");l.innerHTML=`\n          \n           <tr style="font-size: larger;">\n            <td style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;">Приходная</td>\n            <td id="docNumberEntry_${this.counter}" style="border: 0;border-bottom: 2px solid #000;text-align: center;padding-bottom: 0;"></td>\n            <td id="dateEntry_${this.counter}" style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            <td  style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            <td style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            </tr>\n          `,h.innerHTML=`\n\n          <tr>\n          <td style="text-align:left;border:0;border-spacing:0;font-weight:500;">Поставщик: </td>\n          <td id="contractor_${this.counter}" style="text-align:left;border:0;border-spacing:0;font-weight:500;"></td>\n       </tr>\n        <tr>\n          <td style="text-align:left;border:0;font-weight:500;">Покупатель: </td>\n          <td id="customer_${this.counter}" style="text-align:left;border:0;font-weight:500;"></td>\n       </tr>\n        <tr>\n          <td style="text-align:left;border:0;font-weight:500;width: 8%;">Склад: </td>\n          <td id="storage_${this.counter}" style="text-align:left;border:0;font-weight:500;"></td>\n       </tr>`,r.className="collapsible-header",d.className="new badge",d.setAttribute("data-badge-caption",""),s.className="collapsible-body",u.innerHTML='\n           <th style="border: 1px solid #000">№</th>\n           <th style="border: 1px solid #000">Наименование товара</th>\n           <th style="border: 1px solid #000">Количество</th>\n           <th style="border: 1px solid #000">Цена без ПДВ</th>\n           <th style="border: 1px solid #000">Сумма без ПДВ</th>',m.addEventListener("click",this.exportToExcel),i.appendChild(l),i.appendChild(h),i.appendChild(u),i.appendChild(a),s.appendChild(i),s.appendChild(m),n.appendChild(r),n.appendChild(s),o.appendChild(n);const p=document.querySelector(`#contractor_${this.counter}`),g=document.querySelector(`#customer_${this.counter}`),y=document.querySelector(`#storage_${this.counter}`),b=document.querySelector(`#dateEntry_${this.counter}`),v=document.querySelector(`#docNumberEntry_${this.counter}`);this.addCount=0,e.forEach(e=>{const t=document.createElement("tr"),o=document.createElement("td"),n=document.createElement("td"),s=document.createElement("td"),i=document.createElement("td"),l=document.createElement("td");e.document_number===this.counter&&(t.id=`${e.product_id}`,o.innerHTML=`${this.addCount+=1}`,o.style.border="1px solid #000",o.style.textAlign="center",n.id="prod_name",n.innerHTML=`${e.product_name}`,n.style.border="1px solid #000",n.style.textAlign="center",s.id=`quantity_${this.addCount}`,s.innerHTML=`${e.product_number}`,s.style.border="1px solid #000",s.style.textAlign="center",i.id=`price_${this.addCount}`,i.innerHTML=`${e.product_price}`,i.style.border="1px solid #000",i.style.textAlign="center",l.id=`price_${this.addCount}`,l.innerHTML=`${e.product_sum}`,l.style.border="1px solid #000",l.style.textAlign="center",this.fullSum+=Number(l.innerHTML),t.appendChild(o),t.appendChild(n),t.appendChild(s),t.appendChild(i),t.appendChild(l),a.appendChild(t),r.innerHTML=`${c} ${`№ ${e.entry_number}`}`,d.innerHTML=`Дата поступления: ${e.date}`,p.innerHTML=`${e.contractor}`,g.innerHTML=`${e.customer}`,y.innerHTML=`${e.storage_name}`,v.innerHTML=`накладная № ${e.entry_number} от`,b.innerHTML=`${e.date}`)});const _=document.querySelector(`#docTable_${this.counter}`),S=document.createElement("tr"),f=document.createElement("td");f.style.border="1px solid #000",f.style.textAlign="center",f.innerHTML=`Всего: ${this.fullSum}`;for(let e=0;e<4;e+=1){const e=document.createElement("td");e.style.border="0",S.appendChild(e)}S.appendChild(f),_.appendChild(S),r.appendChild(d),o.appendChild(t),this.fullSum=0,this.counter+=1}}}exportToExcel(e,t,o=""){console.log(e.target.previousElementSibling.id),t=e.target.previousElementSibling.id;const n=document.getElementById(t).outerHTML.replace(/ /g,"%20"),r="application/vnd.ms-excel\ufeff";o=o?`${o}.xls`:"excel_data.xls";const d=document.createElement("a");if(document.body.appendChild(d),navigator.msSaveOrOpenBlob){const e=new Blob(["\ufeff",n],{type:r});navigator.msSaveOrOpenBlob(e,o)}else d.href=`data:${r}, ${n}`,d.download=o,d.click()}};var _=class extends n{init(){this.documentNumber=0,this.editNewProducts=[],this.newList=[],this.allAddedProducts=[],this.count=0,this.addCount=0,document.querySelector("#btn-add-outgo-document").addEventListener("click",this.openEntryModal.bind(this))}addNewDocument(){null!==localStorage.getItem("allDocuments")?(this.documents=JSON.parse(localStorage.getItem("allDocuments")),this.documentNumber=Math.max(...this.documents.map(e=>e.document_number))+1):(this.documents=[],this.documentNumber=0),this.documents=[],this.editNewProducts=[],this.editNewProducts=this.allAddedProducts;try{if(0===this.editNewProducts.length)throw new Error("Пустой список товаров");const e=JSON.parse(localStorage.getItem("groupList")),t=JSON.parse(localStorage.getItem("allDocuments")),o=document.querySelector(".contractor").querySelector(".selected").innerText;let n=document.querySelector("#entry_document_number").value;n=Number(n);const r=document.querySelector("#customer").value,d=document.querySelector("#entry_data").value,c=document.querySelector(".storage").querySelector(".selected").innerText,s=e.find(e=>e.name===c),i=s.id,a=s.name;this.editNewProducts.forEach(e=>{e.document_number=this.documentNumber,e.document=2,e.entry_number=n,e.contractor=o,e.customer=r,e.date=`${d}`,e.storage_id=i,e.storage_name=a}),this.documents=this.documents.concat(this.editNewProducts),null!==t&&(this.documents=this.documents.concat(t)),localStorage.setItem("allDocuments",JSON.stringify(this.documents)),this.emit("renderOutDocuments",this.documents,document),this.changeProducts.forEach(e=>{const t=JSON.parse(localStorage.getItem("userHash")).find(t=>t.product_name===e.product_name&&t.storage_name===e.storage_name);t&&(e.product_id=t.product_id,e.product_number=t.product_number-e.product_number,this.emit("editProduct",e,document))}),this.documentNumber+=1,this.allAddedProducts=[],document.querySelector("#modalOutGoDocumentAdd").innerHTML=null}catch(e){alert("Что-то введено не верно, попробуйте снова"),setTimeout(()=>{document.querySelector("#modalOutGoDocumentAdd").innerHTML="",this.openEntryModal()},250)}}openEntryModal(){const e=document.querySelector("#modalOutGoDocumentAdd");function t(){document.querySelector("#modalOutGoDocumentAdd").innerHTML=""}e.innerHTML+='<div class="modal-content">\n    <div id="user_edit_id" hidden></div>\n    <h4>Расходная накладная</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s6 contractor">\n            <select id="contractor_group_select">\n              <option value="" disabled selected>Выбирете поставщика</option>\n            </select>\n            <label>Поставщик</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="entry_document_number" type="number">\n            <label for="document">Номер накладной</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="customer" type="text">\n            <label for="customer">Покупатель</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="entry_data" type="text" class="datepicker">\n            <label for="Date">Дата продажи</label>\n          </div>\n</div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6 storage">\n            <select id="choose_outgo_storage">\n              <option value="" disabled selected>Выбирете склад</option>\n            </select>\n            <label>Склад</label>\n          </div>\n        </div>\n        <div class="row">\n    <a id="choose_product" class="waves-effect waves-green btn-flat" style="background-color: rgba(0, 0, 0, 0.1);">Выбрать товар</a>\n          <div class="col s12 addedProducts">\n          </div>\n        </div>\n      </form>\n    </div>\n  <div class="modal-footer">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="createEntryDocument" class="modal-action modal-close waves-effect waves-green btn-flat">Сохранить</a>\n  </div>';const o=document.querySelector(".datepicker");this.products=JSON.parse(localStorage.getItem("userHash"));const n=JSON.parse(localStorage.getItem("contractorList")),r=JSON.parse(localStorage.getItem("groupList")),d=document.querySelector("#contractor_group_select"),c=document.querySelector("#choose_outgo_storage");n.forEach(e=>{d.innerHTML+=`<option value="${e.contractor_id}">${e.contractor_name}</option>`}),r.forEach(e=>{c.innerHTML+=`<option value="${e.id}">${e.name}</option>`});const s=M.Modal.init(e,{});M.FormSelect.init(d,{}),M.FormSelect.init(c,{}),M.Datepicker.init(o,{selectMonths:!0,selectYears:15,today:"Today",clear:"Clear",close:"Ok",closeOnSelect:!1}),s.open(),this.allAddedProducts=[],this.changeProducts=[],document.querySelector(".datepicker-modal").style.position="fixed";const i=document.querySelector(".open");i.style.maxHeight="80%",i.style.height="80%",this.closeEntryBtn=document.querySelector("#modalOutGoDocumentAdd").querySelector(".modal-close"),this.closeEntryOverlay=document.querySelector("#modalOutGoDocumentAdd").nextElementSibling,this.closeEntryBtn.addEventListener("click",t),this.closeEntryOverlay.addEventListener("click",t);const a=document.querySelector(".addedProducts");document.querySelector("#choose_product").addEventListener("click",()=>{const e=document.querySelector("#modalChooseProduct");e.innerHTML+='<div class="modal-content">\n    <h4>Выбор товара</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s12 showProductsChoose">\n          </div>\n        </div>\n      </form>\n    </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="addChosenProds" class="modal-action modal-close waves-effect waves-green btn-flat">Добавить</a>\n  </div>',M.Modal.init(e,{}).open();const t=JSON.parse(localStorage.getItem("userHash"));function o(){document.querySelector("#modalChooseProduct").innerHTML=""}this.addChosenBtn=document.querySelector("#addChosenProds"),this.addChosenBtn.addEventListener("click",this.addChosen.bind(this)),document.querySelector(".showProductsChoose").innerHTML+='<table class="">\n    <thead>    <tr>\n      <th>Наименование товара</th>\n      <th>Количество товара</th>\n      <th>Отметить</th>\n    </tr> </thead>\n<tbody id="showProductsChoose"></tbody>';const n=document.querySelector("#showProductsChoose");this.products=t;const r=document.querySelector(".storage").querySelector(".selected").innerText;console.log(r),this.products=this.products.filter(e=>e.storage_name===r.toString()),console.log(this.products),this.products.forEach(e=>{e.completed=!1,n.innerHTML+=`<tr id="${e.product_id}">\n           <td>${e.product_name}</td>\n           <td>${e.product_number}</td>\n           <td><input type="checkbox" class="filled-in" /></td>\n          </tr>`}),this.changeCheckbox=document.querySelector("#showProductsChoose"),this.changeCheckbox.addEventListener("click",this.completeProduct.bind(this)),this.closeBtn=document.querySelector("#modalChooseProduct").querySelector(".modal-close"),this.closeOverlay=document.querySelector("#modalChooseProduct").nextElementSibling,this.closeBtn.addEventListener("click",o),this.closeOverlay.addEventListener("click",o)}),a.innerHTML+='<table class="">\n    <thead id="showAddedProducts">    <tr>\n      <th>№</th>\n      <th>Наименование товара</th>\n      <th>Количество</th>\n      <th>Цена без ПДВ</th>\n      <th>Сумма без ПДВ</th>\n</tr></thead>';const l=document.querySelector("#showAddedProducts");l.addEventListener("click",e=>{this.td=e.target,this.prodId=Number(e.target.parentElement.id);const t=this.allAddedProducts.find(e=>this.prodId===e.product_id),o=this.allAddedProducts.indexOf(t);this.td.setAttribute("contenteditable","true"),l.setAttribute("contenteditable","false"),this.td.addEventListener("keypress",e=>{13===e.keyCode&&(t.product_name=l.children[o+1].children[1].innerHTML,t.product_number=Number(l.children[o+1].children[2].innerHTML),t.product_price=Number(l.children[o+1].children[3].innerHTML),t.product_sum=Number(l.children[o+1].children[4].innerHTML),this.td.removeAttribute("contenteditable"),this.priceCount())}),this.td.addEventListener("blur",()=>{t.product_name=l.children[o+1].children[1].innerHTML,t.product_number=Number(l.children[o+1].children[2].innerHTML),t.product_price=Number(l.children[o+1].children[3].innerHTML),t.product_sum=Number(l.children[o+1].children[4].innerHTML),this.td.removeAttribute("contenteditable"),this.priceCount()})}),document.querySelector("#createEntryDocument").addEventListener("click",this.addNewDocument.bind(this))}completeProduct(e){const t=Number(e.target.parentElement.parentElement.id),o=e.target,n=this.products.find(e=>e.product_id===t),r=this.products.indexOf(this.products.find(e=>e.product_id===t));try{o.checked?o.checked&&(n.completed=!0,this.products.splice(r,1),this.products.push(n),o.setAttribute("checked","")):(n.completed=!1,this.products.splice(r,1),this.products.push(n),o.removeAttribute("checked"))}catch(e){console.log("missed")}this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),this.newList=this.products}addChosen(){const e=document.querySelector("#showAddedProducts");1===e.children.length?this.count=0:this.count=this.addCount,this.newList.forEach(t=>{t.completed&&(e.innerHTML+=`<tr id="${t.product_id}">\n              <td>${this.count+=1}</td>\n              <td>${t.product_name}</td>\n              <td id="quantity_${this.count}">0</td>\n              <td id="price_${this.count}">0</td>\n              <td id="sum_${this.count}"></td>\n          </tr>`,this.allAddedProducts.push(t),this.changeProducts.push(t)),this.addCount=this.count});for(let t=1;t<e.children.length;t+=1){const e=document.getElementById("quantity_"+t),o=document.getElementById("price_"+t);document.getElementById("sum_"+t).innerHTML=`${Number(e.innerText)*Number(o.innerText)}`}document.querySelector("#modalChooseProduct").innerHTML=null}priceCount(){const e=document.querySelector("#showAddedProducts");for(let t=1;t<e.children.length;t+=1){const e=document.getElementById("quantity_"+t),o=document.getElementById("price_"+t);document.getElementById("sum_"+t).innerHTML=`${Number(e.innerText)*Number(o.innerText)}`}}};var S=class extends n{init(){this.counter=0,this.on("renderOutDocuments",this.renderDocs.bind(this),document)}renderDocs(e){if(null!==e){if(1===(e=e.filter(e=>2===e.document)).length)e.forEach(e=>e.document_number=0);else{e.sort((e,t)=>e.document_number-t.document_number),this.uniqueLength=[],e.forEach(e=>{this.uniqueLength.includes(e.document_number)||this.uniqueLength.push(e.document_number)});for(let t=0;t<this.uniqueLength.length;t+=1)e.forEach(e=>{e.document_number===this.uniqueLength[t]&&(e.document_number=t)})}this.counter=0,this.fullSum=0;const t=Math.max(...e.map(e=>e.document_number)),o=document.querySelector("#outgoDocs"),n=document.querySelector("#entryDocs"),r=document.querySelector("#moveDocs");n.classList.remove("collapsible"),r.classList.remove("collapsible"),o.classList.add("collapsible");const d=document.querySelector(".collapsible");M.Collapsible.init(d,{}),o.innerHTML="";const c="Расходная накладная";for(let n=0;n<=t;n+=1){const t=document.createDocumentFragment(),n=document.createElement("li"),r=document.createElement("div"),d=document.createElement("span"),s=document.createElement("div"),i=document.createElement("table"),a=document.createElement("tbody");i.id=`docTableOut_${this.counter}`;const l=document.createElement("thead"),u=document.createElement("tr"),m=document.createElement("a");m.id="exportToExcel",m.className="waves-effect waves-green btn-flat",m.style.backgroundColor="rgba(0, 0, 0, 0.1)",m.innerText="Экспортировать в Excel";const h=document.createElement("tbody");l.innerHTML=`\n          \n           <tr style="font-size: larger;">\n            <td style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;">Расходная</td>\n            <td id="docNumberOut_${this.counter}" style="border: 0;border-bottom: 2px solid #000;text-align: center;padding-bottom: 0;"></td>\n            <td id="dateOut_${this.counter}" style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            <td  style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            <td style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            </tr>\n          `,h.innerHTML=`\n\n          <tr>\n          <td style="text-align:left;border:0;border-spacing:0;font-weight:500;">Поставщик: </td>\n          <td id="contractorOut_${this.counter}" style="text-align:left;border:0;border-spacing:0;font-weight:500;"></td>\n       </tr>\n        <tr>\n          <td style="text-align:left;border:0;font-weight:500;">Покупатель: </td>\n          <td id="customerOut_${this.counter}" style="text-align:left;border:0;font-weight:500;"></td>\n       </tr>\n        <tr>\n          <td style="text-align:left;border:0;font-weight:500;width: 8%;">Склад: </td>\n          <td id="storageOut_${this.counter}" style="text-align:left;border:0;font-weight:500;"></td>\n       </tr>`,r.className="collapsible-header",d.className="new badge",d.setAttribute("data-badge-caption",""),s.className="collapsible-body",u.innerHTML='\n           <th style="border: 1px solid #000">№</th>\n           <th style="border: 1px solid #000">Наименование товара</th>\n           <th style="border: 1px solid #000">Количество</th>\n           <th style="border: 1px solid #000">Цена без ПДВ</th>\n           <th style="border: 1px solid #000">Сумма без ПДВ</th>',m.addEventListener("click",this.exportToExcel),i.appendChild(l),i.appendChild(h),i.appendChild(u),i.appendChild(a),s.appendChild(i),s.appendChild(m),n.appendChild(r),n.appendChild(s),o.appendChild(n);const p=document.querySelector(`#contractorOut_${this.counter}`),g=document.querySelector(`#customerOut_${this.counter}`),y=document.querySelector(`#storageOut_${this.counter}`),b=document.querySelector(`#dateOut_${this.counter}`),v=document.querySelector(`#docNumberOut_${this.counter}`);this.addCount=0,e.forEach(e=>{const t=document.createElement("tr"),o=document.createElement("td"),n=document.createElement("td"),s=document.createElement("td"),i=document.createElement("td"),l=document.createElement("td");e.document_number===this.counter&&(t.id=`${e.product_id}`,o.innerHTML=`${this.addCount+=1}`,o.style.border="1px solid #000",o.style.textAlign="center",n.id="prod_name",n.innerHTML=`${e.product_name}`,n.style.border="1px solid #000",n.style.textAlign="center",s.id=`quantity_${this.addCount}`,s.innerHTML=`${e.product_number}`,s.style.border="1px solid #000",s.style.textAlign="center",i.id=`price_${this.addCount}`,i.innerHTML=`${e.product_price}`,i.style.border="1px solid #000",i.style.textAlign="center",l.id=`price_${this.addCount}`,l.innerHTML=`${e.product_sum}`,l.style.border="1px solid #000",l.style.textAlign="center",this.fullSum+=Number(l.innerHTML),t.appendChild(o),t.appendChild(n),t.appendChild(s),t.appendChild(i),t.appendChild(l),a.appendChild(t),r.innerHTML=`${c} ${`№ ${e.entry_number}`}`,d.innerHTML=`Дата продажи: ${e.date}`,p.innerHTML=`${e.contractor}`,g.innerHTML=`${e.customer}`,y.innerHTML=`${e.storage_name}`,v.innerHTML=`накладная № ${e.entry_number} от`,b.innerHTML=`${e.date}`)});const _=document.querySelector(`#docTableOut_${this.counter}`),S=document.createElement("tr"),f=document.createElement("td");f.style.border="1px solid #000",f.style.textAlign="center",f.innerHTML=`Всего: ${this.fullSum}`;for(let e=0;e<4;e+=1){const e=document.createElement("td");e.style.border="0",S.appendChild(e)}S.appendChild(f),_.appendChild(S),r.appendChild(d),o.appendChild(t),this.fullSum=0,this.counter+=1}}}exportToExcel(e,t,o=""){t=e.target.previousElementSibling.id;const n=document.getElementById(t).outerHTML.replace(/ /g,"%20"),r="application/vnd.ms-excel\ufeff";o=o?`${o}.xls`:"excel_data.xls";const d=document.createElement("a");if(document.body.appendChild(d),navigator.msSaveOrOpenBlob){const e=new Blob(["\ufeff",n],{type:r});navigator.msSaveOrOpenBlob(e,o)}else d.href=`data:${r}, ${n}`,d.download=o,d.click()}};var f=class extends n{init(){this.documentNumber=0,this.editNewProducts=[],this.newList=[],this.allAddedProducts=[],this.count=0,this.addCount=0,document.querySelector("#btn-add-move-document").addEventListener("click",this.openEntryModal.bind(this))}addMoveDocument(){null!==localStorage.getItem("allDocuments")?(this.documents=JSON.parse(localStorage.getItem("allDocuments")),this.documentNumber=Math.max(...this.documents.map(e=>e.document_number))+1):(this.documents=[],this.documentNumber=0),this.documents=[],this.editNewProducts=[],this.editNewProducts=this.allAddedProducts;try{if(0===this.editNewProducts.length)throw new Error("Пустой список товаров");const e=JSON.parse(localStorage.getItem("groupList")),t=JSON.parse(localStorage.getItem("allDocuments"));let o=document.querySelector("#move_document_number").value;o=Number(o);const n=document.querySelector("#company").value,r=document.querySelector("#entry_data").value,d=document.querySelector(".storage").querySelector(".selected").innerText,c=document.querySelector(".storage-entry").querySelector(".selected").innerText,s=e.find(e=>e.name===d),i=e.find(e=>e.name===c),a=s.id,l=s.name,u=i.id,m=i.name;this.editNewProducts.forEach(e=>{e.document_number=this.documentNumber,e.document=3,e.move_number=o,e.company=n,e.date=`${r}`,e.storage_id=a,e.storage_name=l,e.storage_entry_id=u,e.storage_entry_name=m}),this.documents=this.documents.concat(this.editNewProducts),null!==t&&(this.documents=this.documents.concat(t)),localStorage.setItem("allDocuments",JSON.stringify(this.documents)),this.emit("renderMoveDocuments",this.documents,document),this.changeProducts.forEach(e=>{const t=JSON.parse(localStorage.getItem("userHash")),o=t.find(t=>t.product_name===e.product_name&&t.storage_name===e.storage_name),n=t.find(t=>t.product_name===e.product_name&&t.storage_name===e.storage_entry_name),r=e.product_number;o&&(e.product_id=o.product_id,e.product_number=o.product_number-e.product_number,this.emit("editProduct",e,document)),n?(e.product_id=n.product_id,e.storage_name=m,e.storage_id=u,e.product_number=n.product_number+r,this.emit("editProduct",e,document)):(e.product_id=Math.max(...t.map(e=>e.product_id))+1,e.storage_name=m,e.storage_id=u,e.product_number=r,this.emit("editProduct",e,document))}),this.documentNumber+=1,this.allAddedProducts=[],document.querySelector("#modalMoveDocumentAdd").innerHTML=null}catch(e){alert("Что-то введено не верно, попробуйте снова"),setTimeout(()=>{document.querySelector("#modalMoveDocumentAdd").innerHTML="",this.openEntryModal()},250)}}openEntryModal(){const e=document.querySelector("#modalMoveDocumentAdd");function t(){document.querySelector("#modalMoveDocumentAdd").innerHTML=""}e.innerHTML+='<div class="modal-content">\n    <div id="user_edit_id" hidden></div>\n    <h4>Движение по складам</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="company" type="text">\n            <label for="company">Организация</label>\n          </div>\n          <div class="input-field col s6">\n            <input id="move_document_number" type="number">\n            <label for="document">Номер накладной</label>\n          </div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6">\n            <input id="entry_data" type="text" class="datepicker">\n            <label for="Date">Дата перемещения</label>\n          </div>\n</div>\n        </div>\n        <div class="row">\n          <div class="input-field col s6 storage">\n            <select id="choose_outgo_storage">\n              <option value="" disabled selected>Выбирете склад отпарвитель</option>\n            </select>\n            <label>Склад отправитель</label>\n          </div>\n          <div class="input-field col s6 storage-entry">\n            <select id="choose_entry_storage">\n              <option value="" disabled selected>Выбирете склад получатель</option>\n            </select>\n            <label>Склад получатель</label>\n          </div>\n        </div>\n        <div class="row">\n    <a id="choose_product" class="waves-effect waves-green btn-flat" style="background-color: rgba(0, 0, 0, 0.1);">Выбрать товар</a>\n          <div class="col s12 addedProducts">\n          </div>\n        </div>\n      </form>\n    </div>\n  <div class="modal-footer">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="createMoveDocument" class="modal-action modal-close waves-effect waves-green btn-flat">Сохранить</a>\n  </div>';const o=document.querySelector(".datepicker");this.products=JSON.parse(localStorage.getItem("userHash"));const n=JSON.parse(localStorage.getItem("groupList")),r=document.querySelector("#choose_outgo_storage"),d=document.querySelector("#choose_entry_storage");n.forEach(e=>{r.innerHTML+=`<option value="${e.id}">${e.name}</option>`}),n.forEach(e=>{d.innerHTML+=`<option value="${e.id}">${e.name}</option>`});const c=M.Modal.init(e,{});M.FormSelect.init(r,{}),M.FormSelect.init(d,{}),M.Datepicker.init(o,{selectMonths:!0,selectYears:15,today:"Today",clear:"Clear",close:"Ok",closeOnSelect:!1}),c.open(),this.allAddedProducts=[],this.changeProducts=[],document.querySelector(".datepicker-modal").style.position="fixed";const s=document.querySelector(".open");s.style.maxHeight="80%",s.style.height="80%",this.closeEntryBtn=document.querySelector("#modalMoveDocumentAdd").querySelector(".modal-close"),this.closeEntryOverlay=document.querySelector("#modalMoveDocumentAdd").nextElementSibling,this.closeEntryBtn.addEventListener("click",t),this.closeEntryOverlay.addEventListener("click",t);const i=document.querySelector(".addedProducts");document.querySelector("#choose_product").addEventListener("click",()=>{const e=document.querySelector("#modalChooseProduct");e.innerHTML+='<div class="modal-content">\n    <h4>Выбор товара</h4>\n    <div class="row">\n      <form class="col s12">\n        <div class="row">\n          <div class="input-field col s12 showProductsChoose">\n          </div>\n        </div>\n      </form>\n    </div>\n  <div class="modal-footer" style="width: 90%;position: fixed">\n    <a class="modal-action modal-close waves-effect waves-green btn-flat">Закрыть</a>\n    <a id="addChosenProds" class="modal-action modal-close waves-effect waves-green btn-flat">Добавить</a>\n  </div>',M.Modal.init(e,{}).open();const t=JSON.parse(localStorage.getItem("userHash"));function o(){document.querySelector("#modalChooseProduct").innerHTML=""}this.addChosenBtn=document.querySelector("#addChosenProds"),this.addChosenBtn.addEventListener("click",this.addChosen.bind(this)),document.querySelector(".showProductsChoose").innerHTML+='<table class="">\n    <thead>    <tr>\n      <th>Наименование товара</th>\n      <th>Количество товара</th>\n      <th>Отметить</th>\n    </tr> </thead>\n<tbody id="showProductsChoose"></tbody>';const n=document.querySelector("#showProductsChoose");this.products=t;const r=document.querySelector(".storage").querySelector(".selected").innerText;this.products=this.products.filter(e=>e.storage_name===r.toString()),this.products.forEach(e=>{e.completed=!1,n.innerHTML+=`<tr id="${e.product_id}">\n           <td>${e.product_name}</td>\n           <td>${e.product_number}</td>\n           <td><input type="checkbox" class="filled-in" /></td>\n          </tr>`}),this.changeCheckbox=document.querySelector("#showProductsChoose"),this.changeCheckbox.addEventListener("click",this.completeProduct.bind(this)),this.closeBtn=document.querySelector("#modalChooseProduct").querySelector(".modal-close"),this.closeOverlay=document.querySelector("#modalChooseProduct").nextElementSibling,this.closeBtn.addEventListener("click",o),this.closeOverlay.addEventListener("click",o)}),i.innerHTML+='<table class="">\n    <thead id="showAddedProducts">    <tr>\n      <th>№</th>\n      <th>Наименование товара</th>\n      <th>Количество</th>\n</tr></thead>';const a=document.querySelector("#showAddedProducts");a.addEventListener("click",e=>{this.td=e.target,this.prodId=Number(e.target.parentElement.id);const t=this.allAddedProducts.find(e=>this.prodId===e.product_id),o=this.allAddedProducts.indexOf(t);this.td.setAttribute("contenteditable","true"),a.setAttribute("contenteditable","false"),this.td.addEventListener("keypress",e=>{13===e.keyCode&&(t.product_number=Number(a.children[o+1].children[2].innerHTML),this.td.removeAttribute("contenteditable"))}),this.td.addEventListener("blur",()=>{t.product_number=Number(a.children[o+1].children[2].innerHTML),this.td.removeAttribute("contenteditable")})});let l=document.querySelector(".storage-entry").querySelector(".selected").innerText;const u=document.querySelector(".storage-entry").querySelector("ul"),m=document.querySelector("#createMoveDocument");if(m.addEventListener("click",this.addMoveDocument.bind(this)),"Выбирете склад получатель"===l){m.setAttribute("disabled","");for(let e=0;e<u.childElementCount;e+=1)u.childNodes[e].addEventListener("click",()=>{"Выбирете склад получатель"!==(l=document.querySelector(".storage-entry").querySelector(".selected").innerText)&&m.removeAttribute("disabled")})}}completeProduct(e){const t=Number(e.target.parentElement.parentElement.id),o=e.target,n=this.products.find(e=>e.product_id===t),r=this.products.indexOf(this.products.find(e=>e.product_id===t));try{o.checked?o.checked&&(n.completed=!0,this.products.splice(r,1),this.products.push(n),o.setAttribute("checked","")):(n.completed=!1,this.products.splice(r,1),this.products.push(n),o.removeAttribute("checked"))}catch(e){console.log("missed")}this.products.sort((e,t)=>e.product_name.localeCompare(t.product_name)),this.newList=this.products}addChosen(){const e=document.querySelector("#showAddedProducts");1===e.children.length?this.count=0:this.count=this.addCount,this.newList.forEach(t=>{t.completed&&(e.innerHTML+=`<tr id="${t.product_id}">\n              <td>${this.count+=1}</td>\n              <td>${t.product_name}</td>\n              <td id="quantity_${this.count}">0</td>\n          </tr>`,this.allAddedProducts.push(t),this.changeProducts.push(t)),this.addCount=this.count}),document.querySelector("#modalChooseProduct").innerHTML=null}};var E=class extends n{init(){this.counter=0,this.on("renderMoveDocuments",this.renderDocs.bind(this),document)}renderDocs(e){if(null!==e){if(1===(e=e.filter(e=>3===e.document)).length)e.forEach(e=>e.document_number=0);else{e.sort((e,t)=>e.document_number-t.document_number),this.uniqueLength=[],e.forEach(e=>{this.uniqueLength.includes(e.document_number)||this.uniqueLength.push(e.document_number)});for(let t=0;t<this.uniqueLength.length;t+=1)e.forEach(e=>{e.document_number===this.uniqueLength[t]&&(e.document_number=t)})}this.counter=0,this.fullQuantity=0;const t=Math.max(...e.map(e=>e.document_number)),o=document.querySelector("#moveDocs"),n=document.querySelector("#outgoDocs");document.querySelector("#entryDocs").classList.remove("collapsible"),n.classList.remove("collapsible"),o.classList.add("collapsible");const r=document.querySelector(".collapsible");M.Collapsible.init(r,{}),o.innerHTML="";const d="Накладная на перемищение";for(let n=0;n<=t;n+=1){const t=document.createDocumentFragment(),n=document.createElement("li"),r=document.createElement("div"),c=document.createElement("span"),s=document.createElement("div"),i=document.createElement("table"),a=document.createElement("tbody");i.id=`docTableMove_${this.counter}`;const l=document.createElement("thead"),u=document.createElement("tr"),m=document.createElement("a");m.id="exportToExcel",m.className="waves-effect waves-green btn-flat",m.style.backgroundColor="rgba(0, 0, 0, 0.1)",m.style.marginTop="10px",m.innerText="Экспортировать в Excel";const h=document.createElement("tbody");l.innerHTML=`\n          \n           <tr style="font-size: larger;">\n            <td style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;">Накладная</td>\n            <td id="docNumberMove_${this.counter}" style="border: 0;border-bottom: 2px solid #000;text-align: center;padding-bottom: 0;"></td>\n            <td id="dateMove_${this.counter}" style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            <td  style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            <td style="border: 0;border-bottom: 2px solid #000;padding-bottom: 0;"></td>\n            </tr>\n          `,h.id="moveTd",h.innerHTML=`\n       <tr>\n          <td style="text-align:left;border:0;border-spacing:0;font-weight:500;">Организация: </td>\n          <td id="companyMove_${this.counter}" style="text-align:left;border:0;border-spacing:0;font-weight:500;"></td>\n       </tr>\n       <tr>\n          <td style="text-align:left;border:0;font-weight:500;">Склад отправитель: </td>\n          <td id="storageMove_${this.counter}" style="text-align:left;border:0;font-weight:500;"></td>\n       </tr>\n       <tr>\n          <td style="text-align:left;border:0;font-weight:500;">Склад получатель: </td>\n          <td id="storageEntryMove_${this.counter}" style="text-align:left;border:0;font-weight:500;"></td>\n       </tr>`,r.className="collapsible-header",c.className="new badge",c.setAttribute("data-badge-caption",""),s.className="collapsible-body",u.innerHTML='\n           <th style="border: 1px solid #000">№</th>\n           <th style="border: 1px solid #000">Наименование товара</th>\n           <th style="border: 1px solid #000">Количество</th>',m.addEventListener("click",this.exportToExcel),i.appendChild(l),i.appendChild(h),i.appendChild(u),i.appendChild(a),s.appendChild(i),s.appendChild(m),n.appendChild(r),n.appendChild(s),o.appendChild(n);const p=document.querySelector(`#companyMove_${this.counter}`),g=document.querySelector(`#storageEntryMove_${this.counter}`),y=document.querySelector(`#storageMove_${this.counter}`),b=document.querySelector(`#dateMove_${this.counter}`),v=document.querySelector(`#docNumberMove_${this.counter}`);this.addCount=0,e.forEach(e=>{const t=document.createElement("tr"),o=document.createElement("td"),n=document.createElement("td"),s=document.createElement("td");e.document_number===this.counter&&(t.id=`${e.product_id}`,o.innerHTML=`${this.addCount+=1}`,o.style.border="1px solid #000",o.style.textAlign="center",n.id="prod_name",n.innerHTML=`${e.product_name}`,n.style.border="1px solid #000",n.style.textAlign="center",s.id=`quantity_${this.addCount}`,s.innerHTML=`${e.product_number}`,s.style.border="1px solid #000",s.style.textAlign="center",this.fullQuantity+=Number(s.innerHTML),t.appendChild(o),t.appendChild(n),t.appendChild(s),a.appendChild(t),r.innerHTML=`${d} ${`№ ${e.move_number}`}`,c.innerHTML=`Дата перемищения: ${e.date}`,p.innerHTML=`${e.company}`,y.innerHTML=`${e.storage_name}`,g.innerHTML=`${e.storage_entry_name}`,v.innerHTML=`на перемещение № ${e.move_number} от`,b.innerHTML=`${e.date}`)});const _=document.createElement("tr"),S=document.createElement("td");S.style.border="1px solid #000",S.style.textAlign="center",S.innerHTML=`Всего: ${this.fullQuantity}`;for(let e=0;e<2;e+=1){const e=document.createElement("td");e.style.border="0",_.appendChild(e)}const f=document.createElement("tr");for(let e=0;e<=3;e+=1){const t=document.createElement("td");if(t.style.textAlign="left",t.style.fontWeight="500",0===e){const e=document.createElement("span");e.style.position="relative",e.style.top="10px",e.innerText="Отгрузил(ла):",t.style.border="0",t.style.borderBottom="1px solid #000",t.appendChild(e)}else if(2===e){const e=document.createElement("span");e.style.position="relative",e.style.top="10px",e.innerText="Получил(ла):",t.style.border="0",t.style.borderBottom="1px solid #000",t.appendChild(e)}else 3===e?(t.style.border="0",t.style.borderBottom="1px solid #000"):t.style.border="0";f.appendChild(t)}_.appendChild(S),a.appendChild(_),a.appendChild(f),r.appendChild(c),o.appendChild(t),this.fullQuantity=0,this.counter+=1}}}exportToExcel(e,t,o=""){console.log(e.target.previousElementSibling.id),t=e.target.previousElementSibling.id;const n=document.getElementById(t).outerHTML.replace(/ /g,"%20"),r="application/vnd.ms-excel\ufeff";o=o?`${o}.xls`:"excel_data.xls";const d=document.createElement("a");if(document.body.appendChild(d),navigator.msSaveOrOpenBlob){const e=new Blob(["\ufeff",n],{type:r});navigator.msSaveOrOpenBlob(e,o)}else d.href=`data:${r}, ${n}`,d.download=o,d.click()}};s.bindTo("#tbodyUser"),l.bindTo(document),r.bindTo(document),c.bindTo("#tbodyStorage"),i.bindTo(document),a.bindTo(document),m.bindTo(document),h.bindTo(document),p.bindTo("#tbodyContractor"),g.bindTo(document),y.bindTo(document),b.bindTo(document),v.bindTo("#entryDocs"),_.bindTo(document),S.bindTo("#outgoDocs"),f.bindTo(document),E.bindTo("#moveDocs")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,